CREATE TABLE TB_HIST_ESCOLAR(
    COD_HIST_ESCOLAR SERIAL,
    NVL_ESCOLARIDADE VARCHAR(50),
    CURSO VARCHAR(50),
    INST_ENSINO VARCHAR(50),
    DATA_INICIO DATE,
    DATA_FIM DATE,
    STATUS VARCHAR(50),
    IND_ATIVO BOOLEAN DEFAULT(TRUE),
    COD_ESTUDANTE INT NOT NULL,
    DATA_INCLUSAO TIMESTAMP,
	DATA_ALTERACAO TIMESTAMP,
    CONSTRAINT pk_hist_escolar PRIMARY KEY(COD_HIST_ESCOLAR),
    CONSTRAINT fk_hist_escolar_est FOREIGN KEY(COD_ESTUDANTE) REFERENCES TB_ESTUDANTE(COD_ESTUDANTE)
);

-- CREATE OR REPLACE FUNCTION TRG_AUDITORIA() RETURNS TRIGGER AS $trg_audit$
--     BEGIN
--         IF (TG_OP = 'UPDATE') THEN
--             UPDATE TB_HIST_ESCOLAR SET DATA_ALTERACAO = NOW() WHERE COD_HIST_ESCOLAR = NEW.COD_HIST_ESCOLAR;
--         ELSIF (TG_OP = 'INSERT') THEN
--             UPDATE TB_HIST_ESCOLAR SET DATA_INCLUSAO = NOW() WHERE COD_HIST_ESCOLAR = NEW.COD_HIST_ESCOLAR;
--         END IF;
--         RETURN NULL; 
--     END;
-- $trg_audit$ LANGUAGE plpgsql;

-- CREATE TRIGGER trg_audit
-- AFTER INSERT OR UPDATE ON TB_HIST_ESCOLAR
--     FOR EACH ROW EXECUTE FUNCTION TRG_AUDITORIA();