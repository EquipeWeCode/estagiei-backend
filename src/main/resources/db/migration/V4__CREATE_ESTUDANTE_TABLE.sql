CREATE TABLE IF NOT EXISTS TB_ESTUDANTE (
	COD_ESTUDANTE SERIAL,
	COD_PESSOA	INT NOT NULL UNIQUE,
	IND_ATIVO	BOOLEAN	DEFAULT 'TRUE',
    DATA_INCLUSAO TIMESTAMP,
	DATA_ALTERACAO TIMESTAMP,
	CONSTRAINT pk_estudante PRIMARY KEY(COD_ESTUDANTE),
	CONSTRAINT pk_estudante_pess FOREIGN KEY(COD_PESSOA) REFERENCES TB_PESSOA(COD_PESSOA) 
);

-- CREATE OR REPLACE FUNCTION TRG_AUDITORIA() RETURNS TRIGGER AS $trg_audit$
--     BEGIN
--         IF (TG_OP = 'UPDATE') THEN
--             UPDATE TB_ESTUDANTE SET DATA_ALTERACAO = NOW() WHERE COD_ESTUDANTE = NEW.COD_ESTUDANTE;
--         ELSIF (TG_OP = 'INSERT') THEN
--             UPDATE TB_ESTUDANTE SET DATA_INCLUSAO = NOW() WHERE COD_ESTUDANTE = NEW.COD_ESTUDANTE;
--         END IF;
--         RETURN NULL; 
--     END;
-- $trg_audit$ LANGUAGE plpgsql;

-- CREATE TRIGGER trg_audit
-- AFTER INSERT OR UPDATE ON TB_ESTUDANTE
--     FOR EACH ROW EXECUTE FUNCTION TRG_AUDITORIA();

INSERT INTO TB_ESTUDANTE(COD_ESTUDANTE, COD_PESSOA) VALUES (777666, 777666);
