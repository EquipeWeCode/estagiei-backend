CREATE TABLE IF NOT EXISTS TB_USUARIO (
	COD_USUARIO SERIAL,
	SENHA	VARCHAR(64) NOT NULL,
	EMAIL	VARCHAR(50) NOT NULL UNIQUE,
	AVATAR	VARCHAR(100),
	TIP_USUARIO VARCHAR(3),
	IND_ATIVO	BOOLEAN	DEFAULT 'TRUE',
	DATA_INCLUSAO TIMESTAMP,
	DATA_ALTERACAO TIMESTAMP,
	CONSTRAINT pk_usuario PRIMARY KEY(COD_USUARIO)
);

/*CREATE OR REPLACE FUNCTION TRG_AUDITORIA() RETURNS TRIGGER AS $trg_audit$
    BEGIN
        IF (TG_OP = 'UPDATE') THEN
            UPDATE TB_USUARIO SET DATA_ALTERACAO = NOW() WHERE COD_USUARIO = NEW.COD_USUARIO;
        ELSIF (TG_OP = 'INSERT') THEN
            UPDATE TB_USUARIO SET DATA_INCLUSAO = NOW() WHERE COD_USUARIO = NEW.COD_USUARIO;
        END IF;
        RETURN NULL; 
    END;
$trg_audit$ LANGUAGE plpgsql;

CREATE TRIGGER trg_audit
AFTER INSERT OR UPDATE ON TB_USUARIO
    FOR EACH ROW EXECUTE FUNCTION TRG_AUDITORIA();*/

/* senha: 1234 */
INSERT INTO TB_USUARIO (COD_USUARIO, TIP_USUARIO, EMAIL, SENHA) VALUES (777666, 'ADM', 'wecodetrabalho@gmail.com', '$2a$10$Arj2K2FcDDHgWV/NffeuJ.h47ylM7M22Kctz9GZ0/ed8rmQbZIjsa');
INSERT INTO TB_USUARIO (COD_USUARIO, TIP_USUARIO, EMAIL, SENHA) VALUES (777667, 'EST', 'aluno@aluno.com', '$2a$10$Arj2K2FcDDHgWV/NffeuJ.h47ylM7M22Kctz9GZ0/ed8rmQbZIjsa');
INSERT INTO TB_USUARIO (COD_USUARIO, TIP_USUARIO, EMAIL, SENHA) VALUES (777668, 'EMP', 'empresa@empresa.com', '$2a$10$Arj2K2FcDDHgWV/NffeuJ.h47ylM7M22Kctz9GZ0/ed8rmQbZIjsa');