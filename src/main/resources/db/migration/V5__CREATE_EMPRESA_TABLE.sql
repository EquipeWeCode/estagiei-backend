CREATE TABLE IF NOT EXISTS TB_EMPRESA (
	COD_EMPRESA	SERIAL,
	COD_USUARIO INT NOT NULL UNIQUE,
	RAZAO_SOCIAL	VARCHAR(50)	NOT NULL,
	NOME_FANTASIA	VARCHAR(50),
	CNPJ	VARCHAR(20)	NOT NULL UNIQUE,
	COD_ENDERECO	INT,
	IND_ATIVO	BOOLEAN	DEFAULT 'FALSE',
    DATA_INCLUSAO TIMESTAMP,
	DATA_ALTERACAO TIMESTAMP,
	CONSTRAINT pk_empresa PRIMARY KEY(COD_EMPRESA),
	CONSTRAINT fk_empresa_usu FOREIGN KEY(COD_USUARIO) REFERENCES TB_USUARIO(COD_USUARIO),
	CONSTRAINT fk_empresa_endr FOREIGN KEY(COD_ENDERECO) REFERENCES TB_ENDERECO(COD_ENDERECO)
);

-- CREATE OR REPLACE FUNCTION TRG_AUDITORIA() RETURNS TRIGGER AS $trg_audit$
--     BEGIN
--         IF (TG_OP = 'UPDATE') THEN
--             UPDATE TB_EMPRESA SET DATA_ALTERACAO = NOW() WHERE COD_EMPRESA = NEW.COD_EMPRESA;
--         ELSIF (TG_OP = 'INSERT') THEN
--             UPDATE TB_EMPRESA SET DATA_INCLUSAO = NOW() WHERE COD_EMPRESA = NEW.COD_EMPRESA;
--         END IF;
--         RETURN NULL; 
--     END;
-- $trg_audit$ LANGUAGE plpgsql;

-- CREATE TRIGGER trg_audit
-- AFTER INSERT OR UPDATE ON TB_EMPRESA
--     FOR EACH ROW EXECUTE FUNCTION TRG_AUDITORIA();

INSERT INTO TB_EMPRESA(COD_EMPRESA, COD_USUARIO, RAZAO_SOCIAL, NOME_FANTASIA, CNPJ, COD_ENDERECO) VALUES (777666, 777668, 'TESTE LTDA', 'TESTES SEGUROS LTDA', '23.064.687/0001-24', 777666);
