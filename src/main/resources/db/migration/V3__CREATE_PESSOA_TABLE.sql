CREATE TABLE IF NOT EXISTS TB_PESSOA (
	COD_PESSOA	SERIAL,
	COD_USUARIO	INT NOT NULL UNIQUE,
	COD_ENDERECO INT,
	NOME	VARCHAR(50)	NOT NULL,
	DT_NASC	DATE,
	RG	VARCHAR(15),
	CPF	VARCHAR(15) UNIQUE,
	IND_ATIVO	BOOLEAN	DEFAULT 'TRUE',
    DATA_INCLUSAO TIMESTAMP,
	DATA_ALTERACAO TIMESTAMP,
	CONSTRAINT pk_pessoa PRIMARY KEY(COD_PESSOA),
	CONSTRAINT fk_pessoa_usu FOREIGN KEY(COD_USUARIO) REFERENCES TB_USUARIO(COD_USUARIO),
	CONSTRAINT fk_pessoa_endc FOREIGN KEY(COD_ENDERECO) REFERENCES TB_ENDERECO(COD_ENDERECO)
);

-- CREATE OR REPLACE FUNCTION TRG_AUDITORIA() RETURNS TRIGGER AS $trg_audit$
--     BEGIN
--         IF (TG_OP = 'UPDATE') THEN
--             UPDATE TB_PESSOA SET DATA_ALTERACAO = NOW() WHERE COD_PESSOA = NEW.COD_PESSOA;
--         ELSIF (TG_OP = 'INSERT') THEN
--             UPDATE TB_PESSOA SET DATA_INCLUSAO = NOW() WHERE COD_PESSOA = NEW.COD_PESSOA;
--         END IF;
--         RETURN NULL; 
--     END;
-- $trg_audit$ LANGUAGE plpgsql;

-- CREATE TRIGGER trg_audit
-- AFTER INSERT OR UPDATE ON TB_PESSOA
--     FOR EACH ROW EXECUTE FUNCTION TRG_AUDITORIA();

INSERT INTO TB_PESSOA(COD_PESSOA, COD_USUARIO, COD_ENDERECO, NOME, DT_NASC, RG, CPF) VALUES (777666, 777666, 777666, 'WE CODE', '09/12/2003', '24.565.856-6', '238.471.650-62');

