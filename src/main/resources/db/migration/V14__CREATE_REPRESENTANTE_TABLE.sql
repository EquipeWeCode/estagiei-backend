CREATE TABLE IF NOT EXISTS TB_REPRESENTANTE (
    COD_REPRESENTANTE SERIAL,
    CARGO VARCHAR(50),
    IND_ATIVO	BOOLEAN	DEFAULT 'TRUE',
    COD_PESSOA	INT NOT NULL UNIQUE,
    COD_EMPRESA	INT NOT NULL UNIQUE,
    DATA_INCLUSAO TIMESTAMP,
	DATA_ALTERACAO TIMESTAMP,
    CONSTRAINT pk_representante PRIMARY KEY(COD_REPRESENTANTE),
    CONSTRAINT fk_representante_pess FOREIGN KEY(COD_PESSOA) REFERENCES TB_PESSOA(COD_PESSOA),
    CONSTRAINT fk_representante_empresa FOREIGN KEY(COD_EMPRESA) REFERENCES TB_EMPRESA(COD_EMPRESA)
);

-- CREATE OR REPLACE FUNCTION TRG_AUDITORIA() RETURNS TRIGGER AS $trg_audit$
--     BEGIN
--         IF (TG_OP = 'UPDATE') THEN
--             UPDATE TB_REPRESENTANTE SET DATA_ALTERACAO = NOW() WHERE COD_REPRESENTANTE = NEW.COD_REPRESENTANTE;
--         ELSIF (TG_OP = 'INSERT') THEN
--             UPDATE TB_REPRESENTANTE SET DATA_INCLUSAO = NOW() WHERE COD_REPRESENTANTE = NEW.COD_REPRESENTANTE;
--         END IF;
--         RETURN NULL; 
--     END;
-- $trg_audit$ LANGUAGE plpgsql;
-- 
-- CREATE TRIGGER trg_audit
-- AFTER INSERT OR UPDATE ON TB_REPRESENTANTE
--     FOR EACH ROW EXECUTE FUNCTION TRG_AUDITORIA();